name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests
        run: |
          # 如果有测试脚本，取消下面注释
          # python -m pytest

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |            
            # 判断当前用户是否为root
            IS_ROOT=false
            if [ "$(id -u)" -eq 0 ]; then
              IS_ROOT=true
              echo "当前用户是root用户，将不使用sudo命令"
            else
              echo "当前用户是非root用户，将使用sudo命令执行需要特权的操作"
            fi
            # 检查目标目录是否存在，不存在则创建
            if [ ! -d "/var/www/TurboGong" ]; then
              echo "目标目录不存在，正在创建..."
              if [ "$IS_ROOT" = true ]; then
                mkdir -p /var/www/TurboGong
                chown $USER:$USER /var/www/TurboGong
              else
                sudo mkdir -p /var/www/TurboGong
                sudo chown $USER:$USER /var/www/TurboGong
              fi
              # 首次部署，克隆仓库
              cd /var/www
              git clone https://github.com/${{ github.repository }}.git TurboGong
              cd TurboGong
              # 创建虚拟环境
              python3 -m venv venv
              source venv/bin/activate
              pip install -r requirements.txt
              pip install gunicorn
            else
              # 目录已存在，执行更新操作
              cd /var/www/TurboGong
              git pull
              source venv/bin/activate
              pip install -r requirements.txt
            fi
            
            # 确保日志目录存在
            if [ "$IS_ROOT" = true ]; then
              mkdir -p /var/log/turbogong
              chown www-data:www-data /var/log/turbogong
              
              # 重启应用服务
              supervisorctl restart turbogong || supervisorctl start turbogong
              # 重启Nginx（如果需要）
              # systemctl restart nginx
            else
              sudo mkdir -p /var/log/turbogong
              sudo chown www-data:www-data /var/log/turbogong
              
              # 重启应用服务
              sudo supervisorctl restart turbogong || sudo supervisorctl start turbogong
              # 重启Nginx（如果需要）
              # sudo systemctl restart nginx
            fi